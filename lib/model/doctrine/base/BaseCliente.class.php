<?php

/**
 * BaseCliente
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idCustomer
 * @property string $identification
 * @property string $businessName
 * @property string $tradename
 * @property float $credit
 * @property boolean $isBlocked
 * @property boolean $state
 * @property float $avalilableCredit
 * @property integer $idPricelist
 * @property Doctrine_Collection $Sede_Cliente
 * @property Cartera $Cartera
 * 
 * @method integer             getIdCustomer()       Returns the current record's "idCustomer" value
 * @method string              getIdentification()   Returns the current record's "identification" value
 * @method string              getBusinessName()     Returns the current record's "businessName" value
 * @method string              getTradename()        Returns the current record's "tradename" value
 * @method float               getCredit()           Returns the current record's "credit" value
 * @method boolean             getIsBlocked()        Returns the current record's "isBlocked" value
 * @method boolean             getState()            Returns the current record's "state" value
 * @method float               getAvalilableCredit() Returns the current record's "avalilableCredit" value
 * @method integer             getIdPricelist()      Returns the current record's "idPricelist" value
 * @method Doctrine_Collection getSedeCliente()      Returns the current record's "Sede_Cliente" collection
 * @method Cartera             getCartera()          Returns the current record's "Cartera" value
 * @method Cliente             setIdCustomer()       Sets the current record's "idCustomer" value
 * @method Cliente             setIdentification()   Sets the current record's "identification" value
 * @method Cliente             setBusinessName()     Sets the current record's "businessName" value
 * @method Cliente             setTradename()        Sets the current record's "tradename" value
 * @method Cliente             setCredit()           Sets the current record's "credit" value
 * @method Cliente             setIsBlocked()        Sets the current record's "isBlocked" value
 * @method Cliente             setState()            Sets the current record's "state" value
 * @method Cliente             setAvalilableCredit() Sets the current record's "avalilableCredit" value
 * @method Cliente             setIdPricelist()      Sets the current record's "idPricelist" value
 * @method Cliente             setSedeCliente()      Sets the current record's "Sede_Cliente" collection
 * @method Cliente             setCartera()          Sets the current record's "Cartera" value
 * 
 * @package    lalider
 * @subpackage model
 * @author     Miguel Marquez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCliente extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('Cliente');
        $this->hasColumn('idCustomer', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('identification', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('businessName', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('tradename', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('credit', 'float', 10, array(
             'type' => 'float',
             'length' => 10,
             ));
        $this->hasColumn('isBlocked', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('state', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
        $this->hasColumn('avalilableCredit', 'float', 10, array(
             'type' => 'float',
             'length' => 10,
             ));
        $this->hasColumn('idPricelist', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Sede_Cliente', array(
             'local' => 'idCustomer',
             'foreign' => 'idCustomer'));

        $this->hasOne('Cartera', array(
             'local' => 'idCustomer',
             'foreign' => 'idCustomer'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'created_at',
              'type' => 'timestamp',
              'format' => 'Y-m-d H:i:s',
              'options' => 
              array(
              'notnull' => false,
              'required' => false,
              ),
             ),
             'updated' => 
             array(
              'name' => 'updated_at',
              'type' => 'timestamp',
              'format' => 'Y-m-d H:i:s',
              'options' => 
              array(
              'notnull' => false,
              'required' => false,
              ),
             ),
             ));
        $this->actAs($timestampable0);
    }
}